[tool.poetry]
name = "dag-execution-engine"
version = "1.0.0"
description = "A production-grade Python DAG execution engine with pluggable rule and executor engines, featuring comprehensive error handling and REST API."
authors = ["Piotr Pestka <pp@neatnet.tech>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/yourusername/dags"
keywords = ["dag", "workflow", "execution-engine", "fastapi"]
packages = [{include = "api"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI"
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.9"
click = "^8.0"
fastapi = "^0.104"
uvicorn = {extras = ["standard"], version = "^0.27"}
requests = "^2.31"
pydantic-settings = "^2.5"

[tool.poetry.group.dev.dependencies]
pytest = "~8.4.1"
pytest-cov = "~4.1.0"
pytest-asyncio = "~0.21.1"
httpx = "~0.25.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"

[tool.poetry.scripts]
dag-engine = "dag_engine.cli:main"
dag-api = "main:run"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API endpoint tests",
    "slow: Slow running tests"
]
addopts = """
    -v
    --strict-markers
    --tb=short
    --cov=api
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
"""
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["api"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"